version: "3.8"

services:
  auth:
    image: "coolexplorer/spring-micro-auth:0.1.14-dev"
    ports:
      - "127.0.0.1:8080:8080"
    environment:
      SERVER_PORT: 8080
      POSTGRESQL_HOST: localhost
      POSTGRESQL_PORT: 5432
      KAFKA_BOOTSTRAP_ADDRESSES: "localhost:29092"
      LOGGING_LEVEL_IO_COOLEXPLORER: DEBUG
    depends_on:
      - db
      - kafka
    volumes:
      - $PWD/logs/auth:/logs
    networks: 
      - spring-micro

  session:
    image: "coolexplorer/spring-micro-session:0.1.5-dev"
    ports:
      - "127.0.0.1:8081:8080"
    environment:
      SERVER_PORT: 8080
      REDIS_HOST: localhost
      REDIS_PORT: 6379
      KAFKA_BOOTSTRAP_ADDRESSES: "localhost:29092"
      LOGGING_LEVEL_IO_COOLEXPLORER: DEBUG
    depends_on:
      - redis
      - kafka
    volumes:
      - $PWD/logs/session:/logs
    networks: 
      - spring-micro
  
  zookeeper:
    image: "bitnami/zookeeper:latest"
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - spring-micro

  kafka:
    image: "bitnami/kafka:2.5.0"
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://10.5.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - spring-micro

  redis:
    image: "redis:alpine"
    command: redis-server --requirepass sOmE_sEcUrE_pAsS
    ports:
      - "6379:6379"
    volumes:
      - $PWD/redis-data:/var/lib/redis
      - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      REDIS_REPLICATION_MODE: master
    networks: 
      - spring-micro

  db:
    image: "postgres:13"
    ports:
      - "5432:5432"
    volumes:
      - $PWD/pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: coolexplorer
      POSTGRES_PASSWORD: password
      POSTGRES_DB: auth
    networks: 
      - spring-micro

  adminer:
    image: adminer
    restart: always
    ports:
      - "8089:8080"
    networks: 
      - spring-micro

networks:
  spring-micro:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.5.0.0/16
          ip_range: 10.5.0.0/24
          gateway: 10.5.0.1
          aux_addresses:
            kafka: 10.5.0.2
            zookeeper: 10.5.0.3
            db: 10.5.0.4
            adminer: 10.5.0.5
            redis: 10.5.0.6
            auth: 10.5.0.7
            session: 10.5.0.8